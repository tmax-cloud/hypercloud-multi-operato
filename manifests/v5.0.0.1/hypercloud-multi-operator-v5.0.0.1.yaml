apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-multi-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clusterclaims.claim.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.phase
    name: Status
    type: string
  - JSONPath: .status.reason
    name: Reason
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: claim.tmax.io
  names:
    kind: ClusterClaim
    listKind: ClusterClaimList
    plural: clusterclaims
    shortNames:
    - cc
    singular: clusterclaim
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterClaim is the Schema for the clusterclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterClaimSpec defines the desired state of ClusterClaim
          properties:
            clusterName:
              description: The name of the cluster to be created
              type: string
            masterNum:
              description: The number of master node
              type: integer
            masterType:
              description: The type of VM for master node
              type: string
            provider:
              description: The name of cloud provider where VM is created
              type: string
            region:
              description: The region where VM is working
              type: string
            sshKey:
              description: The ssh key info to access VM
              type: string
            version:
              description: The version of kubernetes
              type: string
            workerNum:
              description: The number of worker node
              type: integer
            workerType:
              description: The type of VM for worker node
              type: string
          required:
          - clusterName
          - masterNum
          - masterType
          - provider
          - region
          - sshKey
          - version
          - workerNum
          - workerType
          type: object
        status:
          description: ClusterClaimStatus defines the observed state of ClusterClaim
          properties:
            message:
              type: string
            phase:
              enum:
              - Awaiting
              - Admitted
              - Success
              - Rejected
              - Error
              - Deleted
              type: string
            reason:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-multi-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clustermanagers.cluster.tmax.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.provider
    description: provider
    name: Provider
    type: string
  - JSONPath: .spec.version
    description: k8s version
    name: Version
    type: string
  - JSONPath: .status.ready
    description: is running
    name: Ready
    type: string
  - JSONPath: .spec.masterNum
    description: replica number of master
    name: MasterNum
    type: string
  - JSONPath: .status.masterRun
    description: running of master
    name: MasterRun
    type: string
  - JSONPath: .spec.workerNum
    description: replica number of worker
    name: WorkerNum
    type: string
  - JSONPath: .status.workerRun
    description: running of worker
    name: WorkerRun
    type: string
  group: cluster.tmax.io
  names:
    kind: ClusterManager
    listKind: ClusterManagerList
    plural: clustermanagers
    shortNames:
    - clm
    singular: clustermanager
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClusterManager is the Schema for the clustermanagers API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        fakeMetadata:
          description: 'EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN! NOTE:
            json tags are required.  Any new fields you add must have json tags for
            the fields to be serialized.'
          properties:
            fakename:
              type: string
          type: object
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterManagerSpec defines the desired state of ClusterManager
          properties:
            masterNum:
              description: The number of master node
              type: integer
            masterType:
              description: The type of VM for master node
              type: string
            provider:
              description: The name of cloud provider where VM is created
              type: string
            region:
              description: The region where VM is working
              type: string
            sshKey:
              description: The ssh key info to access VM
              type: string
            version:
              description: The version of kubernetes
              type: string
            workerNum:
              description: The number of worker node
              type: integer
            workerType:
              description: The type of VM for worker node
              type: string
          type: object
        status:
          description: ClusterManagerStatus defines the observed state of ClusterManager
          properties:
            groups:
              additionalProperties:
                type: string
              type: object
            masterRun:
              type: integer
            members:
              additionalProperties:
                type: string
              type: object
            nodes:
              items:
                properties:
                  ip:
                    type: string
                  isMaster:
                    type: boolean
                  name:
                    type: string
                  resources:
                    items:
                      properties:
                        capacity:
                          type: string
                        type:
                          type: string
                        usage:
                          type: string
                      type: object
                    type: array
                type: object
              type: array
            owner:
              additionalProperties:
                type: string
              type: object
            provider:
              type: string
            ready:
              type: boolean
            version:
              type: string
            workerRun:
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-multi-operator-serving-cert
  creationTimestamp: null
  name: hypercloud-multi-operator-mutating-webhook-configuration
  namespace: hypercloud5-system
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: hypercloud-multi-operator-webhook-service
      namespace: hypercloud5-system
      path: /mutate-claim-tmax-io-v1alpha1-clusterclaim
  failurePolicy: Fail
  name: mclusterclaim.kb.io
  rules:
  - apiGroups:
    - claim.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clusterclaims
- clientConfig:
    caBundle: Cg==
    service:
      name: hypercloud-multi-operator-webhook-service
      namespace: hypercloud5-system
      path: /mutate-cluster-tmax-io-v1alpha1-clustermanager
  failurePolicy: Fail
  name: mclustermanager.kb.io
  rules:
  - apiGroups:
    - cluster.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - clustermanagers
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: hypercloud5-system/hypercloud-multi-operator-serving-cert
  creationTimestamp: null
  name: hypercloud-multi-operator-validating-webhook-configuration
  namespace: hypercloud5-system
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: hypercloud-multi-operator-webhook-service
      namespace: hypercloud5-system
      path: /validate-claim-tmax-io-v1alpha1-clusterclaim
  failurePolicy: Fail
  name: vclusterclaim.kb.io
  rules:
  - apiGroups:
    - claim.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - UPDATE
    resources:
    - clusterclaims
- clientConfig:
    caBundle: Cg==
    service:
      name: hypercloud-multi-operator-webhook-service
      namespace: hypercloud5-system
      path: /validate-cluster-tmax-io-v1alpha1-clustermanager
  failurePolicy: Fail
  name: vclustermanager.kb.io
  rules:
  - apiGroups:
    - cluster.tmax.io
    apiVersions:
    - v1alpha1
    operations:
    - UPDATE
    resources:
    - clustermanagers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hypercloud-multi-operator-leader-election-role
  namespace: hypercloud5-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hypercloud-multi-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - post
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - service
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - post
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - claim.tmax.io
  resources:
  - clusterclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - claim.tmax.io
  resources:
  - clusterclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.tmax.io
  resources:
  - clustermanagers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.tmax.io
  resources:
  - clustermanagers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - controlplane.cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - core.kubefed.io
  resources:
  - kubefedclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - core.kubefed.io
  resources:
  - kubefedclusters
  - kubefedconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - post
  - update
  - watch
- apiGroups:
  - hyper.multi.tmax.io
  resources:
  - hyperclusterresources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - hyper.multi.tmax.io
  resources:
  - hyperclusterresources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - domains
  - servicednsrecords
  verbs:
  - create
  - delete
  - get
  - list
  - post
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - serviceinstances
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - servicecatalog.k8s.io
  resources:
  - serviceinstances/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - types.kubefed.io
  resources:
  - federatedconfigmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - types.kubefed.io
  resources:
  - federatedservices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hypercloud-multi-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: hypercloud-multi-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hypercloud-multi-operator-leader-election-rolebinding
  namespace: hypercloud5-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hypercloud-multi-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud5-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-multi-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-multi-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud5-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-multi-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-multi-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud5-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    hypercloud: multi-operator
  name: hypercloud-multi-operator-controller-manager-metrics-service
  namespace: hypercloud5-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    hypercloud: multi-operator
---
apiVersion: v1
kind: Service
metadata:
  name: hypercloud-multi-operator-webhook-service
  namespace: hypercloud5-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    hypercloud: multi-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    hypercloud: multi-operator
  name: hypercloud-multi-operator-controller-manager
  namespace: hypercloud5-system
spec:
  replicas: 1
  selector:
    matchLabels:
      hypercloud: multi-operator
  template:
    metadata:
      labels:
        hypercloud: multi-operator
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: tmaxcloudck/hypercloud-multi-operator:vte
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: hypercloud-multi-operator-serving-cert
  namespace: hypercloud5-system
spec:
  dnsNames:
  - hypercloud-multi-operator-webhook-service.hypercloud5-system.svc
  - hypercloud-multi-operator-webhook-service.hypercloud5-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: hypercloud-multi-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: hypercloud-multi-operator-selfsigned-issuer
  namespace: hypercloud5-system
spec:
  selfSigned: {}
